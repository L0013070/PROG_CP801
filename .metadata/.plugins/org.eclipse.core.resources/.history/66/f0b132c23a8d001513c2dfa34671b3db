package jobqueue;

import java.util.ArrayList;
import java.util.concurrent.Semaphore;
import java.util.logging.Level;
import java.util.logging.Logger;
import junit.framework.TestCase;

/**
 *
 * @author L00131070
 */
public class JobQueueTest extends TestCase {

    @Override
    protected void setUp() throws Exception {
        super.setUp();
    }

    @Override
    protected void tearDown() throws Exception {
        super.tearDown();
    }

    /**
     *
     */
    public void testJobQueue() {
        System.out.println("testJobQueue");
        JobQueue queue = new JobQueue();
        assertTrue(queue != null);
        assertTrue(queue.isRunning());
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        System.out.println("Queue shutdown");
        queue.setRunning(false);
        assertTrue(!queue.isRunning());
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        System.out.println("Queue startup");
        queue.setRunning(true);
        assertTrue(queue.isRunning());
        System.out.println("Test testConstructor successful");
    }

    /**
     *
     */
    public void testAdd() {
        System.out.println("testAdd");
        JobQueue queue = new JobQueue();
        if (queue.add(null)) {
            fail(" NULL JOB");
        }
        for (int i = 0; i < 40; i++) {
            Job job = new TestJob();
            boolean test = queue.add(job);
            if (!test) {
                assertTrue(!test && i == 20);
                System.out.println(i + " " + test + " waiting 1s");
                try {
                    Thread.sleep(1000);
                    test = queue.add(job);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
        queue.setRunning(false);
        System.out.println("Test testAdd successful");
    }

    /**
     *
     */
    public void testSetRunning() {
        System.out.println("testSetRunning");
        JobQueue queue = new JobQueue();
        assertTrue(queue.isRunning());
        queue.setRunning(true);
        assertTrue(queue.isRunning());
        queue.setRunning(false);
        assertTrue(!queue.isRunning());
        queue.setRunning(false);
        assertTrue(!queue.isRunning());
        queue.setRunning(true);
        assertTrue(queue.isRunning());
        queue.setRunning(false);
        assertTrue(!queue.isRunning());
        System.out.println("Test testSetRunning successful");
    }

    /**
     *
     */
    public void testErrorJob() {
        System.out.println("testErrorJob");
        JobQueue queue = new JobQueue();
        queue.add(new TestErrorJob());
        queue.setRunning(false);
        System.out.println("Test testErrorJob successful");
    }

    /**
     * Test of getWaitingThreads method, of class JobQueue.
     */
       public void testHandleThrowables() {
        System.out.println("handleThrowables");
        Throwable ex = new Exception("TestException");
        JobQueue instance = new JobQueue();
        instance.handleThrowables(ex);
        System.err.flush();
        System.out.println("Test testHandleThrowables successful");
    }

}
